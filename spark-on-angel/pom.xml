<!--?xml version="1.0" encoding="UTF-8"?-->
<!--
	~ Tencent is pleased to support the open source community by making Angel available.
	~
	~ Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.
	~
	~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
	~ compliance with the License. You may obtain a copy of the License at
	~
	~ https://opensource.org/licenses/Apache-2.0
	~
	~ Unless required by applicable law or agreed to in writing, software distributed under the License
	~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
	~ or implied. See the License for the specific language governing permissions and limitations under
	~ the License.
	~
	-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tencent.angel</groupId>
		<artifactId>angel</artifactId>
		<version>2.0.1</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>spark-on-angel</artifactId>
	<packaging>pom</packaging>
	<name>spark-on-angel</name>

	<modules>
		<module>core</module>
		<module>mllib</module>
		<module>examples</module>
	</modules>

	<properties>
		<spark.version>2.1.0</spark.version>
		<PermGen>512m</PermGen>
		<MaxPermGen>512m</MaxPermGen>
		<CodeCacheSize>1024m</CodeCacheSize>
		<main.basedir>${project.parent.basedir}</main.basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<!--<scope>${dist.deps.scope}</scope>-->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<!--<scope>${dist.deps.scope}</scope>-->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-0-8_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<!--<scope>${dist.deps.scope}</scope>-->
		</dependency>
		<dependency>
			<groupId>com.tencent.angel</groupId>
			<artifactId>angel-ps-core</artifactId>
			<version>${project.version}</version>
			<scope>${dist.deps.scope}</scope>
		</dependency>
		<dependency>
			<groupId>com.tencent.angel</groupId>
			<artifactId>angel-ps-psf</artifactId>
			<version>${project.version}</version>
			<scope>${dist.deps.scope}</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.binary.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<id>eclipse-add-source</id>
						<goals>
							<goal>add-source</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile-first</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-scaladocs</id>
						<phase>verify</phase>
						<goals>
							<goal>doc-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
					<scalaVersion>${scala.version}</scalaVersion>
					<recompileMode>incremental</recompileMode>
					<useZincServer>true</useZincServer>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms1024m</jvmArg>
						<jvmArg>-Xmx3g</jvmArg>
						<jvmArg>-XX:PermSize=${PermGen}</jvmArg>
						<jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
						<jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
					</jvmArgs>
					<javacArgs>
						<javacArg>-source</javacArg>
						<javacArg>1.7</javacArg>
						<javacArg>-target</javacArg>
						<javacArg>1.7</javacArg>
						<javacArg>-Xlint:all,-serial,-path</javacArg>
					</javacArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<maxmem>1024m</maxmem>
					<fork>true</fork>
					<compilerArgs>
						<arg>-Xlint:all,-serial,-path</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- Surefire runs all Java tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
						<include>**/*Suite.java</include>
					</includes>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<argLine>-Xmx3g -Xss4096k -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=512m</argLine>
					<failIfNoTests>false</failIfNoTests>
					<systemPropertyVariables>
						<buildDirectory>${project.build.directory}</buildDirectory>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Scalatest runs all Scala tests -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>sparkOnAngel.txt</filereports>
					<argLine>-ea -Xmx3g -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=${CodeCacheSize}</argLine>
					<stderr/>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<locales>zh_CN</locales>
					<outputEncoding>utf-8</outputEncoding>
					<inputEncoding>utf-8</inputEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<excludes>
						<exclude>**/*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scalastyle</groupId>
				<artifactId>scalastyle-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<verbose>false</verbose>
					<failOnViolation>false</failOnViolation>
					<includeTestSourceDirectory>false</includeTestSourceDirectory>
					<failOnWarning>false</failOnWarning>
					<sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
					<testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
					<configLocation>${main.basedir}/dev/scalastyle-config.xml</configLocation>
					<outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
					<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
					<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnViolation>false</failOnViolation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<sourceDirectories>
						<dir>${basedir}/src/main/java</dir>
						<dir>${basedir}/src/main/scala</dir>
					</sourceDirectories>
					<testSourceDirectories>${basedir}/src/scala</testSourceDirectories>
					<configLocation>${main.basedir}/dev/checkstyle.xml</configLocation>
					<outputFile>${basedir}/target/checkstyle-output.xml</outputFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin-->
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local-test</id>
			<properties>
				<dist.deps.scope>compile</dist.deps.scope>
			</properties>
		</profile>
	</profiles>
</project>